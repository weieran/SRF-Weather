# coding: utf-8

"""
    SRF Weather

    SRF Meteo serves weather forecast for over 100'000 locations within Switzerland  # noqa: E501

    The version of the OpenAPI document: 1.0.4
    Contact: api@srgssr.ch
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
from inspect import getfullargspec
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, StrictInt, StrictStr

class MinMaxcolor(BaseModel):
    """
    MinMaxcolor
    """
    temperature: StrictInt = ...
    background_color: StrictStr = ...
    text_color: StrictStr = ...
    __properties = ["temperature", "background_color", "text_color"]

    class Config:
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> MinMaxcolor:
        """Create an instance of MinMaxcolor from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> MinMaxcolor:
        """Create an instance of MinMaxcolor from a dict"""
        if obj is None:
            return None

        if type(obj) is not dict:
            return MinMaxcolor.parse_obj(obj)

        _obj = MinMaxcolor.parse_obj({
            "temperature": obj.get("temperature"),
            "background_color": obj.get("background_color"),
            "text_color": obj.get("text_color")
        })
        return _obj

